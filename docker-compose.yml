services:
  #  文件存储
  minio:
    container_name: minio
    image: bitnami/minio
    environment:
      - MINIO_ROOT_USER=admin123
      - MINIO_ROOT_PASSWORD=admin123
      - TZ=Asia/Shanghai
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./data/minio/data:/bitnami/minio/data
    restart: always
#    mongo
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: "@lm12345678"
      MONGO_INITDB_DATABASE: mydatabase
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongo:/data/db
  #    mysql数据库
  mysql:
    image: mysql:8.0.42
    container_name: mysql
    environment:
      # 时区上海
      TZ: Asia/Shanghai
      # root 密码
      MYSQL_ROOT_PASSWORD: root
      # 初始化数据库(后续的初始化sql会在这个库执行)
      MYSQL_DATABASE: mydatabase
    ports:
      - "3306:3306"
    volumes:
      # 数据挂载
      - ./data/mysql/data/:/var/lib/mysql/
      # 配置挂载
      - ./data/mysql/conf/:/etc/mysql/conf.d/
    command:
      # 将mysql8.0默认密码策略 修改为 原先 策略 (mysql8.0对其默认策略做了更改 会导致密码无法匹配)
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --explicit_defaults_for_timestamp=true
      --lower_case_table_names=1
    privileged: true
    network_mode: "host"
    restart: always
  redis:
    image: redis:7.2.8
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      # 时区上海
      TZ: Asia/Shanghai
    volumes:
      # 配置文件
      - ./redis/conf:/redis/config:rw
      # 数据文件
      - ./redis/data/:/redis/data/:rw
    command: "redis-server /redis/config/redis.conf"
    privileged: true
    network_mode: "host"
  #skywalking
  skywalking-oap:
    image: apache/skywalking-oap-server
    container_name: skywalking-oap
    restart: always
    links:
      - mysql
    healthcheck:
      test: [ "CMD-SHELL", "/skywalking/bin/swctl ch" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    environment:
      SW_STORAGE: mysql
      SW_JDBC_URL: jdbc:mysql://db:3306/skywalking?rewriteBatchedStatements=true&allowMultiQueries=true
      SW_DATA_SOURCE_USER: root
      SW_DATA_SOURCE_PASSWORD: Aa123456#
      JAVA_OPTS: "-Xmx1g"
      TZ: Asia/Shanghai
    volumes:
      - ./libs/mysql-connector-j-8.0.33.jar:/skywalking/oap-libs/mysql-connector-java-8.0.33.jar
    ports:
      - "12800:12800"
      - "11800:11800"
    depends_on:
      - mysql
  skywalking-ui:
    depends_on:
      - skywalking-oap
    container_name: skywalking-ui
    image: apache/skywalking-ui
    restart: always
    links:
      - skywalking-oap
    environment:
      TZ: Asia/Shanghai
      SW_OAP_ADDRESS: http://skywalking-oap:12800
    ports:
      - "8080:8080"

  #  postgres数据库
  postgres:
    image: postgis/postgis
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: Aa123456#
      PGDATA: ./var/lib/postgresql/data
      TZ: "Asia/Shanghai"
    volumes:
      - ./data/pgdata:/var/lib/postgresql/data


  #  nacos注册中心
  nacos:
    image: nacos/nacos-server:${NACOS_VERSION}
    container_name: nacos
    env_file:
      - ./nacos/nacos-standlone-mysql.env
    ports:
      - "8848:8848"
      - "9848:9848"
    depends_on:
      mysql:
        condition: service_healthy
    restart: always
  #北极星服务
  polaris-server:
    container_name: polaris-server
    hostname: polaris-server
    image: polarismesh/polaris-server
    restart: always
    volumes:
      - ./polaris/server/polaris-server.yaml:/root/conf/polaris-server.yaml
    expose: # 用于北极星集群内部访问
      - 8090    # api-http
      - 8091    # service-grpc
      - 8093    # config-grpc
      - 8761    # service-eureka
      - 8848    # nacos-http port
      - 9848    # nacos-grpc port
      - 15010   # xds-v3
    ports: # 用于其他服务访问北极星
      - "8090:8090" # api-http
      - "8091:8091" # service-grpc
      - "8093:8093" # config-grpc
      - "8761:8761" # service-eureka
      - "8848:8848" # nacos-http port
      - "9848:9848" # nacos-grpc port
      - "15010:15010" # xds-v3
    links:
      - mysql
    depends_on:
      - mysql
  polaris-console:
    container_name: polaris-console
    hostname: polaris-console
    image: polarismesh/polaris-console
    restart: always
    volumes:
      - ./polaris/console/polaris-console.yaml:/root/polaris-console.yaml
    ports:
      - "8080:8080"
    depends_on:
      - polaris-server
      - pushgateway
    links:
      - polaris-server
      - pushgateway
  polaris-limiter:
    container_name: polaris-limiter
    hostname: polaris-limiter
    image: polarismesh/polaris-limiter
    restart: always
    environment:
      - MY_ID=1
    volumes:
      - ./polaris/limiter/polaris-limiter.yaml:/root/polaris-limiter.yaml
    expose: # 用于北极星集群内部访问
      - 8100    # service-http
      - 8101    # service-grpc
    ports:
      - "8100:8100"
      - "8101:8101"
    depends_on:
      - polaris-server
    links:
      - polaris-server
  prometheus:
    container_name: prometheus
    hostname: polaris-prometheus
    build: polaris/prometheus
    restart: always
    expose:
      - 9090
    links:
      - polaris-server # 采集北极星性能
  pushgateway:
    container_name: polaris-pushgateway
    image: prom/pushgateway:latest
    hostname: polaris-pushgateway
    restart: always
    expose:
      - 9091
  grafana:
    container_name: polaris-grafana
    build: polaris/grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./polaris/grafana/provisioning/:/etc/grafana/provisioning/:rw
      - ./polaris/grafana/dashboards:/etc/grafana/dashboards/:rw
      - ./polaris/grafana/grafana.ini:/etc/grafana/grafana.ini:rw
    depends_on:
      - prometheus
      - pushgateway
